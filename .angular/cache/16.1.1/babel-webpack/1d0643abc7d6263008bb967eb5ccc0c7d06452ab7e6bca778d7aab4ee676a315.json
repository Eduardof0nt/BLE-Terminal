{"ast":null,"code":"import _asyncToGenerator from \"/Users/eduardo/Dropbox/Development/JavaScript/Node/Electron/bluetooth-serial/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bluetooth.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/router\";\nclass SerialComponent {\n  constructor(bluetoothService, appComponent, route) {\n    this.bluetoothService = bluetoothService;\n    this.appComponent = appComponent;\n    this.route = route;\n    this.platform = '';\n    this.serial = undefined;\n    this.data = [];\n    this.recording = false;\n    this.platform = this.bluetoothService.getOsAsObservable();\n    this.loadSerial();\n  }\n  loadSerial() {\n    return _asyncToGenerator(function* () {})();\n  } // let deviceString = this.route.snapshot.paramMap.get('device') || '';\n  // console.log(deviceString);\n  // if (deviceString != '') {\n  //   this.device = JSON.parse(deviceString);\n  //   if (this.platform == 'darwin') {\n  //     console.log('/dev/cu.' + this.device.name.replace(' ', ''));\n  //     this.serial = new this.bluetoothService.serial.SerialPort({\n  //       path: '/dev/cu.' + this.device.name.replace(' ', ''),\n  //       baudRate: 9600,\n  //       // parser:\n  //       //   new this.bluetoothService.serial.SerialPort.parsers.Readline(\n  //       //     '\\n'\n  //       //   ),\n  //     });\n  //     let aux_this = this;\n  //     this.serial.on('open', function () {\n  //       console.log('-- Connection opened --');\n  //       aux_this.serial.on('data', function (data: any) {\n  //         console.log(data);\n  //         if (aux_this.recording) {\n  //           aux_this.data.push(data);\n  //         }\n  //       });\n  //     });\n  //   }\n  //   //TODO\n  //   else if (this.platform == 'linux') {\n  //   }\n  //   //TODO\n  //   else if (this.platform == 'win32') {\n  //   }\n  // } else {\n  //   this.appComponent.electron.ipcRenderer.sendSync(\n  //     'remove-serial-device',\n  //     this.device.address\n  //   );\n  // }\n}\n\nSerialComponent.ɵfac = function SerialComponent_Factory(t) {\n  return new (t || SerialComponent)(i0.ɵɵdirectiveInject(i1.BluetoothService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nSerialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SerialComponent,\n  selectors: [[\"app-serial\"]],\n  decls: 0,\n  vars: 0,\n  template: function SerialComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SerialComponent };","map":{"version":3,"names":["SerialComponent","constructor","bluetoothService","appComponent","route","platform","serial","undefined","data","recording","getOsAsObservable","loadSerial","_asyncToGenerator","i0","ɵɵdirectiveInject","i1","BluetoothService","i2","AppComponent","i3","ActivatedRoute","selectors","decls","vars","template","SerialComponent_Template","rf","ctx","styles"],"sources":["/Users/eduardo/Dropbox/Development/JavaScript/Node/Electron/bluetooth-serial/src/app/pages/serial/serial.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { BluetoothService } from 'src/app/services/bluetooth.service';\n\n@Component({\n  selector: 'app-serial',\n  templateUrl: './serial.component.html',\n  styleUrls: ['./serial.component.scss'],\n})\nexport class SerialComponent {\n  platform: string = '';\n  device: any;\n  serial: any = undefined;\n  data: any[] = [];\n  recording: boolean = false;\n\n  constructor(\n    private bluetoothService: BluetoothService,\n    private appComponent: AppComponent,\n    private route: ActivatedRoute\n  ) {\n    this.platform = this.bluetoothService.getOsAsObservable();\n    this.loadSerial();\n  }\n  async loadSerial() {\n    // let deviceString = this.route.snapshot.paramMap.get('device') || '';\n    // console.log(deviceString);\n    // if (deviceString != '') {\n    //   this.device = JSON.parse(deviceString);\n    //   if (this.platform == 'darwin') {\n    //     console.log('/dev/cu.' + this.device.name.replace(' ', ''));\n    //     this.serial = new this.bluetoothService.serial.SerialPort({\n    //       path: '/dev/cu.' + this.device.name.replace(' ', ''),\n    //       baudRate: 9600,\n    //       // parser:\n    //       //   new this.bluetoothService.serial.SerialPort.parsers.Readline(\n    //       //     '\\n'\n    //       //   ),\n    //     });\n    //     let aux_this = this;\n    //     this.serial.on('open', function () {\n    //       console.log('-- Connection opened --');\n    //       aux_this.serial.on('data', function (data: any) {\n    //         console.log(data);\n    //         if (aux_this.recording) {\n    //           aux_this.data.push(data);\n    //         }\n    //       });\n    //     });\n    //   }\n    //   //TODO\n    //   else if (this.platform == 'linux') {\n    //   }\n    //   //TODO\n    //   else if (this.platform == 'win32') {\n    //   }\n    // } else {\n    //   this.appComponent.electron.ipcRenderer.sendSync(\n    //     'remove-serial-device',\n    //     this.device.address\n    //   );\n    // }\n  }\n}\n"],"mappings":";;;;;AAKA,MAKaA,eAAe;EAO1BC,YACUC,gBAAkC,EAClCC,YAA0B,EAC1BC,KAAqB;IAFrB,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IATf,KAAAC,QAAQ,GAAW,EAAE;IAErB,KAAAC,MAAM,GAAQC,SAAS;IACvB,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,SAAS,GAAY,KAAK;IAOxB,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACH,gBAAgB,CAACQ,iBAAiB,EAAE;IACzD,IAAI,CAACC,UAAU,EAAE;EACnB;EACMA,UAAUA,CAAA;IAAA,OAAAC,iBAAA;EAsChB,CAAC,CArCC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;AApDSZ,eAAe,C;mBAAfA,eAAe,EAAAa,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,cAAA;AAAA;AAAfpB,eAAe,C;QAAfA,eAAe;EAAAqB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA;SAAf5B,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}