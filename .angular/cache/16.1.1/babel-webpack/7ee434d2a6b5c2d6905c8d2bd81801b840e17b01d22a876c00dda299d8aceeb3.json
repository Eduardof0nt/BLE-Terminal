{"ast":null,"code":"import _asyncToGenerator from \"/Users/eduardo/Dropbox/Development/JavaScript/Node/Electron/bluetooth-serial/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bluetooth.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/common\";\nfunction HomeComponent_tr_16_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_16_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.connectToDevice(ctx_r6.devices[device_r1].id));\n    });\n    i0.ɵɵtext(1, \" Connect \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const device_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r3.devices[device_r1].loading);\n  }\n}\nfunction HomeComponent_tr_16_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function HomeComponent_tr_16_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const device_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.disconnectDevice(ctx_r10.devices[device_r1].id));\n    });\n    i0.ɵɵtext(1, \" Disconnect \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HomeComponent_tr_16_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"span\", 14);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HomeComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\", 7);\n    i0.ɵɵtemplate(10, HomeComponent_tr_16_button_10_Template, 2, 1, \"button\", 8);\n    i0.ɵɵtemplate(11, HomeComponent_tr_16_button_11_Template, 2, 0, \"button\", 9);\n    i0.ɵɵtemplate(12, HomeComponent_tr_16_div_12_Template, 3, 0, \"div\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const device_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r2 + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.devices[device_r1].name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.devices[device_r1].id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.devices[device_r1].rssi);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.devices[device_r1].connected && !ctx_r0.devices[device_r1].serial);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.devices[device_r1].connected);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.devices[device_r1].loading);\n  }\n}\nlet HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(bluetoothService, appComponent) {\n      var _this = this;\n      this.bluetoothService = bluetoothService;\n      this.appComponent = appComponent;\n      this.platform = '';\n      this.devices = {};\n      this.connectedDevices = [];\n      this.keepReloading = true;\n      this.platform = this.bluetoothService.getOsAsObservable();\n      this.pool();\n      this.appComponent.electron.ipcRenderer.on('serial-disconnect', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (event, id) {\n          _this.disconnectDevice(id);\n          return true;\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      this.appComponent.electron.ipcRenderer.on('serial-write', /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (event, data) {\n          _this.sendToDevice(data.id, data.command);\n          return true;\n        });\n        return function (_x3, _x4) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n    ngOnDestroy() {\n      this.keepReloading = false;\n    }\n    pool() {\n      let aux_this = this;\n      setTimeout(() => {\n        if (aux_this.keepReloading) {\n          aux_this.getDevices();\n          aux_this.pool();\n        }\n      }, 30);\n    }\n    getDevices() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        let devices = _this2.bluetoothService.bluetoothDevices;\n        for (let device in devices) {\n          if (_this2.devices[devices[device].id]) {\n            _this2.devices[devices[device].id] = {\n              name: devices[device].advertisement.localName || 'No Name',\n              id: devices[device].id,\n              rssi: devices[device].rssi,\n              peripheral: _this2.devices[devices[device].id].peripheral,\n              loading: _this2.devices[devices[device].id].loading,\n              connected: _this2.devices[devices[device].id].connected,\n              characteristics: _this2.devices[devices[device].id].characteristics,\n              serial: _this2.devices[devices[device].id].serial\n            };\n          } else {\n            _this2.devices[devices[device].id] = {\n              name: devices[device].advertisement.localName || 'No Name',\n              id: devices[device].id,\n              peripheral: devices[device],\n              rssi: devices[device].rssi,\n              characteristics: undefined,\n              loading: false,\n              connected: devices[device].state == 'connected',\n              serial: false\n            };\n          }\n        }\n      })();\n    }\n    resetDeviceList() {\n      this.devices = {};\n      this.bluetoothService.resetBluetoothDeviceList();\n      this.devices = {};\n    }\n    connectToDevice(id) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        _this3.devices[id].loading = true;\n        let disconnect = true;\n        setTimeout(() => {\n          if (disconnect) {\n            try {\n              _this3.devices[id].peripheral.cancelConnect();\n            } catch (error) {}\n            _this3.devices[id].loading = false;\n            _this3.devices[id].connected = false;\n          }\n        }, 60000);\n        try {\n          yield _this3.devices[id].peripheral.connectAsync();\n          disconnect = false;\n          let aux_this = _this3;\n          const disconnectCallback = () => {\n            aux_this.devices[id].loading = false;\n            aux_this.devices[id].connected = false;\n          };\n          _this3.devices[id].peripheral.once('disconnect', disconnectCallback);\n          _this3.devices[id].loading = false;\n          _this3.devices[id].connected = true;\n          const {\n            characteristics\n          } = yield _this3.devices[id].peripheral.discoverAllServicesAndCharacteristicsAsync();\n          _this3.devices[id].characteristics = characteristics;\n          _this3.peripheralConnected(_this3.devices[id]);\n          for (let i = 0; i < characteristics.length; i++) {\n            if (characteristics[i].properties.includes('notify')) {\n              characteristics[i].notify(true);\n              characteristics[i].on('read', data => {\n                _this3.appComponent.electron.ipcRenderer.sendSync('serial-device-read', {\n                  id: id,\n                  data: data.toString()\n                });\n              });\n            }\n          }\n        } catch (error) {\n          _this3.devices[id].peripheral.disconnect();\n        }\n      })();\n    }\n    disconnectDevice(id) {\n      this.devices[id].peripheral.disconnect();\n      this.appComponent.electron.ipcRenderer.sendSync('remove-serial-device', id);\n    }\n    peripheralConnected(device) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        _this4.appComponent.electron.ipcRenderer.sendSync('begin-serial-device', {\n          id: device.id,\n          name: device.name\n        });\n      })();\n    }\n    sendToDevice(id, command) {\n      const utf8EncodeText = new TextEncoder();\n      for (let i = 0; i < this.devices[id].characteristics.length; i++) {\n        if (this.devices[id].characteristics[i].properties.includes('write')) {\n          this.devices[id].characteristics[i].write(utf8EncodeText.encode(command), false);\n        }\n      }\n    }\n    getObjectKeys(object) {\n      return Object.keys(object);\n    }\n  }\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.BluetoothService), i0.ɵɵdirectiveInject(i2.AppComponent));\n  };\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 18,\n    vars: 1,\n    consts: [[1, \"home-container\"], [1, \"top-container\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", 3, \"click\"], [\"src\", \"assets/images/refresh-cw.svg\"], [1, \"table-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"bottom-container\"], [2, \"display\", \"flex\", \"width\", \"150px\", \"align-items\", \"center\", \"justify-content\", \"flex-start\"], [\"type\", \"button\", \"class\", \"btn btn-primary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-warning\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"spinner-border\", \"role\", \"status\", \"style\", \"margin-left: 5px\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", 3, \"click\"], [\"role\", \"status\", 1, \"spinner-border\", 2, \"margin-left\", \"5px\"], [1, \"visually-hidden\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_2_listener() {\n          return ctx.resetDeviceList();\n        });\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"table\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"Number\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"Rssi\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"th\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, HomeComponent_tr_16_Template, 13, 7, \"tr\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(17, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getObjectKeys(ctx.devices));\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\".home-container[_ngcontent-%COMP%]{display:flex;flex-direction:column}.home-container[_ngcontent-%COMP%]   .top-container[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-start;padding:5px 20px;height:60px;background-color:#c9c3c3}.home-container[_ngcontent-%COMP%]   .top-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{height:80%}.home-container[_ngcontent-%COMP%]   .top-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{height:100%}.home-container[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]{height:calc(100% - 100px);overflow-y:scroll;padding:10px}.home-container[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.home-container[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .home-container[_ngcontent-%COMP%]   .table-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{text-align:center}.home-container[_ngcontent-%COMP%]   .bottom-container[_ngcontent-%COMP%]{height:50px}\"]\n  });\n  return HomeComponent;\n})();\nexport { HomeComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}