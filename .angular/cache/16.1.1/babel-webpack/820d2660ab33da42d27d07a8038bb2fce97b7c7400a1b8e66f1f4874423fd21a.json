{"ast":null,"code":"import _asyncToGenerator from \"/Users/eduardo/Dropbox/Development/JavaScript/Node/Electron/bluetooth-serial/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bluetooth.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/router\";\nclass SerialComponent {\n  constructor(bluetoothService, appComponent, route) {\n    this.bluetoothService = bluetoothService;\n    this.appComponent = appComponent;\n    this.route = route;\n    this.platform = '';\n    this.serial = undefined;\n    this.data = [];\n    this.recording = false;\n    this.platform = this.bluetoothService.getOsAsObservable();\n    this.loadSerial();\n  }\n  loadSerial() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      let deviceString = _this.route.snapshot.paramMap.get('device') || '';\n      console.log(deviceString);\n      if (deviceString != '') {\n        _this.device = JSON.parse(deviceString);\n        if (_this.platform == 'darwin') {\n          console.log('/dev/cu.' + _this.device.name.replace(' ', ''));\n          _this.serial = new _this.bluetoothService.serial.SerialPort({\n            path: '/dev/cu.' + _this.device.name.replace(' ', ''),\n            baudRate: 9600\n            // parser:\n            //   new this.bluetoothService.serial.SerialPort.parsers.Readline(\n            //     '\\n'\n            //   ),\n          });\n\n          let aux_this = _this;\n          _this.serial.on('open', function () {\n            console.log('-- Connection opened --');\n            aux_this.serial.on('data', function (data) {\n              console.log(data);\n              if (aux_this.recording) {\n                aux_this.data.push(data);\n              }\n            });\n          });\n        }\n        //TODO\n        else if (_this.platform == 'linux') {}\n        //TODO\n        else if (_this.platform == 'win32') {}\n      } else {\n        _this.appComponent.electron.ipcRenderer.sendSync('remove-serial-device', _this.device.address);\n      }\n    })();\n  }\n}\nSerialComponent.ɵfac = function SerialComponent_Factory(t) {\n  return new (t || SerialComponent)(i0.ɵɵdirectiveInject(i1.BluetoothService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nSerialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SerialComponent,\n  selectors: [[\"app-serial\"]],\n  decls: 0,\n  vars: 0,\n  template: function SerialComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { SerialComponent };","map":{"version":3,"names":["SerialComponent","constructor","bluetoothService","appComponent","route","platform","serial","undefined","data","recording","getOsAsObservable","loadSerial","_this","_asyncToGenerator","deviceString","snapshot","paramMap","get","console","log","device","JSON","parse","name","replace","SerialPort","path","baudRate","aux_this","on","push","electron","ipcRenderer","sendSync","address","i0","ɵɵdirectiveInject","i1","BluetoothService","i2","AppComponent","i3","ActivatedRoute","selectors","decls","vars","template","SerialComponent_Template","rf","ctx","styles"],"sources":["/Users/eduardo/Dropbox/Development/JavaScript/Node/Electron/bluetooth-serial/src/app/pages/serial/serial.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { BluetoothService } from 'src/app/services/bluetooth.service';\n\n@Component({\n  selector: 'app-serial',\n  templateUrl: './serial.component.html',\n  styleUrls: ['./serial.component.scss'],\n})\nexport class SerialComponent {\n  platform: string = '';\n  device: any;\n  serial: any = undefined;\n  data: any[] = [];\n  recording: boolean = false;\n\n  constructor(\n    private bluetoothService: BluetoothService,\n    private appComponent: AppComponent,\n    private route: ActivatedRoute\n  ) {\n    this.platform = this.bluetoothService.getOsAsObservable();\n    this.loadSerial();\n  }\n  async loadSerial() {\n    let deviceString = this.route.snapshot.paramMap.get('device') || '';\n    console.log(deviceString);\n    if (deviceString != '') {\n      this.device = JSON.parse(deviceString);\n      if (this.platform == 'darwin') {\n        console.log('/dev/cu.' + this.device.name.replace(' ', ''));\n        this.serial = new this.bluetoothService.serial.SerialPort({\n          path: '/dev/cu.' + this.device.name.replace(' ', ''),\n          baudRate: 9600,\n          // parser:\n          //   new this.bluetoothService.serial.SerialPort.parsers.Readline(\n          //     '\\n'\n          //   ),\n        });\n        let aux_this = this;\n        this.serial.on('open', function () {\n          console.log('-- Connection opened --');\n          aux_this.serial.on('data', function (data: any) {\n            console.log(data);\n            if (aux_this.recording) {\n              aux_this.data.push(data);\n            }\n          });\n        });\n      }\n      //TODO\n      else if (this.platform == 'linux') {\n      }\n      //TODO\n      else if (this.platform == 'win32') {\n      }\n    } else {\n      this.appComponent.electron.ipcRenderer.sendSync(\n        'remove-serial-device',\n        this.device.address\n      );\n    }\n  }\n}\n"],"mappings":";;;;;AAKA,MAKaA,eAAe;EAO1BC,YACUC,gBAAkC,EAClCC,YAA0B,EAC1BC,KAAqB;IAFrB,KAAAF,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,YAAY,GAAZA,YAAY;IACZ,KAAAC,KAAK,GAALA,KAAK;IATf,KAAAC,QAAQ,GAAW,EAAE;IAErB,KAAAC,MAAM,GAAQC,SAAS;IACvB,KAAAC,IAAI,GAAU,EAAE;IAChB,KAAAC,SAAS,GAAY,KAAK;IAOxB,IAAI,CAACJ,QAAQ,GAAG,IAAI,CAACH,gBAAgB,CAACQ,iBAAiB,EAAE;IACzD,IAAI,CAACC,UAAU,EAAE;EACnB;EACMA,UAAUA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACd,IAAIC,YAAY,GAAGF,KAAI,CAACR,KAAK,CAACW,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE;MACnEC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;MACzB,IAAIA,YAAY,IAAI,EAAE,EAAE;QACtBF,KAAI,CAACQ,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACR,YAAY,CAAC;QACtC,IAAIF,KAAI,CAACP,QAAQ,IAAI,QAAQ,EAAE;UAC7Ba,OAAO,CAACC,GAAG,CAAC,UAAU,GAAGP,KAAI,CAACQ,MAAM,CAACG,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;UAC3DZ,KAAI,CAACN,MAAM,GAAG,IAAIM,KAAI,CAACV,gBAAgB,CAACI,MAAM,CAACmB,UAAU,CAAC;YACxDC,IAAI,EAAE,UAAU,GAAGd,KAAI,CAACQ,MAAM,CAACG,IAAI,CAACC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;YACpDG,QAAQ,EAAE;YACV;YACA;YACA;YACA;WACD,CAAC;;UACF,IAAIC,QAAQ,GAAGhB,KAAI;UACnBA,KAAI,CAACN,MAAM,CAACuB,EAAE,CAAC,MAAM,EAAE;YACrBX,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;YACtCS,QAAQ,CAACtB,MAAM,CAACuB,EAAE,CAAC,MAAM,EAAE,UAAUrB,IAAS;cAC5CU,OAAO,CAACC,GAAG,CAACX,IAAI,CAAC;cACjB,IAAIoB,QAAQ,CAACnB,SAAS,EAAE;gBACtBmB,QAAQ,CAACpB,IAAI,CAACsB,IAAI,CAACtB,IAAI,CAAC;;YAE5B,CAAC,CAAC;UACJ,CAAC,CAAC;;QAEJ;QAAA,KACK,IAAII,KAAI,CAACP,QAAQ,IAAI,OAAO,EAAE,C;QAEnC;QAAA,KACK,IAAIO,KAAI,CAACP,QAAQ,IAAI,OAAO,EAAE,C;OAEpC,MAAM;QACLO,KAAI,CAACT,YAAY,CAAC4B,QAAQ,CAACC,WAAW,CAACC,QAAQ,CAC7C,sBAAsB,EACtBrB,KAAI,CAACQ,MAAM,CAACc,OAAO,CACpB;;IACF;EACH;;AArDWlC,eAAe,C;mBAAfA,eAAe,EAAAmC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,gBAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,YAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,cAAA;AAAA;AAAf1C,eAAe,C;QAAfA,eAAe;EAAA2C,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA;SAAflD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}