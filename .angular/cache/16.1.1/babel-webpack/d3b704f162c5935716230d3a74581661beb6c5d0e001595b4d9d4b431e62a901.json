{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bluetooth.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = function (a0) {\n  return {\n    recording: a0\n  };\n};\nfunction SerialComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 10)(1, \"td\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c0, row_r1.recording));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.timestampString);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(row_r1.data);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return {\n    \"btn-secondary\": a0,\n    \"btn-success\": a1\n  };\n};\nlet SerialComponent = /*#__PURE__*/(() => {\n  class SerialComponent {\n    constructor(bluetoothService, appComponent, route, cdr) {\n      this.bluetoothService = bluetoothService;\n      this.appComponent = appComponent;\n      this.route = route;\n      this.cdr = cdr;\n      this.data = [];\n      this.recording = false;\n      this.autoscroll = false;\n      this.command = '';\n      this.loadSerial();\n    }\n    ngOnInit() {\n      this.device = JSON.parse(this.route.snapshot.paramMap.get('device'));\n    }\n    goToLastRow() {\n      if (this.autoscroll) {\n        const elmnt = document.querySelector('table tr:last-child');\n        console.log(elmnt);\n        elmnt.scrollIntoView({\n          behavior: 'smooth',\n          block: 'start',\n          inline: 'nearest'\n        });\n      }\n      setTimeout(() => {\n        this.goToLastRow();\n      }, 30);\n    }\n    loadSerial() {\n      this.appComponent.electron.ipcRenderer.on('update-data', (event, serialData) => {\n        for (let i = this.data.length; i < serialData.length; i++) {\n          this.data.push({\n            ...serialData[i],\n            recording: this.recording,\n            timestampString: new Date(serialData[i].timestamp).toLocaleString('es-CR')\n          });\n        }\n        this.cdr.detectChanges();\n        return true;\n      });\n    }\n    sendCommand() {\n      this.appComponent.electron.ipcRenderer.sendSync('serial-device-write', {\n        id: this.device.id,\n        command: this.command\n      });\n      this.command = '';\n    }\n    toogleRecording() {\n      this.recording = !this.recording;\n    }\n    toogleAutoscroll() {\n      this.autoscroll = !this.autoscroll;\n    }\n  }\n  SerialComponent.ɵfac = function SerialComponent_Factory(t) {\n    return new (t || SerialComponent)(i0.ɵɵdirectiveInject(i1.BluetoothService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  SerialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SerialComponent,\n    selectors: [[\"app-serial\"]],\n    inputs: {\n      data: \"data\"\n    },\n    decls: 20,\n    vars: 12,\n    consts: [[1, \"main-container\"], [1, \"controls-container\"], [\"type\", \"button\", 1, \"btn\", 3, \"ngClass\", \"click\"], [1, \"serial-container\"], [1, \"time\"], [1, \"data\"], [3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"data-send-container\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [3, \"ngClass\"], [2, \"text-overflow\", \"ellipsis\"]],\n    template: function SerialComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function SerialComponent_Template_button_click_2_listener() {\n          return ctx.toogleAutoscroll();\n        });\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function SerialComponent_Template_button_click_4_listener() {\n          return ctx.toogleRecording();\n        });\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"table\")(8, \"thead\")(9, \"tr\")(10, \"th\", 4);\n        i0.ɵɵtext(11, \"Timestamp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\", 5);\n        i0.ɵɵtext(13, \"Data\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\");\n        i0.ɵɵtemplate(15, SerialComponent_tr_15_Template, 5, 5, \"tr\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function SerialComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.command = $event;\n        })(\"keydown.enter\", function SerialComponent_Template_input_keydown_enter_17_listener() {\n          return ctx.sendCommand();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 9);\n        i0.ɵɵtext(19, \"Send\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c1, !ctx.autoscroll, ctx.autoscroll));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Autoscroll \", ctx.autoscroll ? \"on\" : \"off\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c1, !ctx.recording, ctx.recording));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" Recording \", ctx.recording ? \"on\" : \"off\", \" \");\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.command);\n      }\n    },\n    dependencies: [i4.NgClass, i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\".main-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;height:100%;overflow-y:hidden}.main-container[_ngcontent-%COMP%]   .controls-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-start;width:100%;height:60px;border:solid 1px black}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]{width:100%;height:100%;overflow-y:scroll;position:relative}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%], .main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{border:1px solid black}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%;max-height:100%}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{background-color:#fff;position:sticky;top:0;font-weight:700;text-align:center}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{width:200px}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   .data[_ngcontent-%COMP%]{width:auto}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   .recording[_ngcontent-%COMP%]{background-color:#00800090}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:5px}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .time[_ngcontent-%COMP%]{text-align:center}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]   .data[_ngcontent-%COMP%]{text-overflow:ellipsis}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]{position:sticky;bottom:0;display:flex;width:100%;height:40px;color:beige;border:1px solid black;padding:5px}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:calc(100% - 110px)}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100px;margin-left:10px;padding:0 5px}\"]\n  });\n  return SerialComponent;\n})();\nexport { SerialComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}