{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bluetooth.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction SerialComponent_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", row_r1.timestamp, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", row_r1.data, \" \");\n  }\n}\nlet SerialComponent = /*#__PURE__*/(() => {\n  class SerialComponent {\n    constructor(bluetoothService, appComponent, route, cdr) {\n      this.bluetoothService = bluetoothService;\n      this.appComponent = appComponent;\n      this.route = route;\n      this.cdr = cdr;\n      this.data = [];\n      this.recording = false;\n      this.command = '';\n      this.loadSerial();\n    }\n    ngOnInit() {\n      this.device = JSON.parse(this.route.snapshot.paramMap.get('device'));\n    }\n    loadSerial() {\n      this.appComponent.electron.ipcRenderer.on('update-data', (event, serialData) => {\n        for (let i = this.data.length; i < serialData.length; i++) {\n          this.data.push({\n            ...serialData[i],\n            recording: this.recording\n          });\n        }\n        this.cdr.markForCheck();\n        return true;\n      });\n    }\n    sendCommand() {\n      this.appComponent.electron.ipcRenderer.sendSync('serial-device-write', {\n        id: this.device.id,\n        command: this.command\n      });\n      this.command = '';\n    }\n  }\n  SerialComponent.ɵfac = function SerialComponent_Factory(t) {\n    return new (t || SerialComponent)(i0.ɵɵdirectiveInject(i1.BluetoothService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n  SerialComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SerialComponent,\n    selectors: [[\"app-serial\"]],\n    decls: 14,\n    vars: 2,\n    consts: [[1, \"main-container\"], [1, \"controls-container\"], [1, \"serial-container\"], [2, \"width\", \"200px\"], [4, \"ngFor\", \"ngForOf\"], [1, \"data-send-container\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n    template: function SerialComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"table\")(4, \"tr\")(5, \"th\", 3);\n        i0.ɵɵtext(6, \"Timestamp\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"th\");\n        i0.ɵɵtext(8, \"Data\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, SerialComponent_tr_9_Template, 5, 2, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function SerialComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.command = $event;\n        })(\"keydown.enter\", function SerialComponent_Template_input_keydown_enter_11_listener() {\n          return ctx.sendCommand();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵtext(13, \"Send\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.data);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.command);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n    styles: [\".main-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;height:100%}.main-container[_ngcontent-%COMP%]   .controls-container[_ngcontent-%COMP%]{width:100%;height:60px;border:solid 1px black}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]{display:flex;width:100%;height:100%;overflow-y:scroll}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}.main-container[_ngcontent-%COMP%]   .serial-container[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]{height:50px}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]{position:sticky;bottom:0;display:flex;width:100%;height:40px;color:beige;border:1px solid black;padding:5px}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:calc(100% - 110px)}.main-container[_ngcontent-%COMP%]   .data-send-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100px;margin-left:10px;padding:0 5px}\"]\n  });\n  return SerialComponent;\n})();\nexport { SerialComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}